rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isMember(gymId) {
      return isSignedIn() &&
             exists(/databases/$(database)/documents/gyms/$(gymId)/members/$(request.auth.uid));
    }

    function isAdmin(gymId) {
      return isSignedIn() &&
             get(/databases/$(database)/documents/gyms/$(gymId)/members/$(request.auth.uid)).data.role == "admin";
    }

    // ---- Users ----
    match /users/{uid} {
      allow read, write: if isSignedIn() && uid == request.auth.uid;
    }

    // ---- Gyms ----
    match /gyms/{gymId} {

      // Mitgliedschaft verwalten
      match /members/{uid} {
        // Mitglied seinen eigenen Eintrag anlegen/lesen, wenn Gym openEnrollment == true
        allow create: if isSignedIn()
                      && uid == request.auth.uid
                      && get(/databases/$(database)/documents/gyms/$(gymId)).data.openEnrollment == true;
        allow read:   if isSignedIn() && (uid == request.auth.uid || isAdmin(gymId));
        allow update, delete: if isAdmin(gymId) || (isSignedIn() && uid == request.auth.uid);
      }

      // Branding darf nur von Mitgliedern gelesen werden
      match /config/branding {
        allow read: if isMember(gymId);
        allow write: if isAdmin(gymId);
      }

      // Muskelgruppen nur für Mitglieder lesbar
      match /muscleGroups/{muscleId} {
        allow read: if isMember(gymId);
        allow write: if isAdmin(gymId);
      }

      // Devices & Subcollections
      match /devices/{deviceId} {
        allow read: if isMember(gymId);
        allow write: if isAdmin(gymId);

        // Snapshots (Session “Seiten”)
        match /sessions/{sessionId} {
          // Besitzer darf seine eigenen Snapshots lesen/schreiben
          allow read: if isMember(gymId) && resource.data.userId == request.auth.uid;
          allow create: if isMember(gymId)
                        && request.resource.data.userId == request.auth.uid
                        && request.resource.data.keys().hasOnly([
                          'sessionId','deviceId','exerciseId','createdAt','userId',
                          'note','sets','renderVersion','uiHints'
                        ]);
          // Optional Update/Deletion nur Admin oder Owner
          allow update, delete: if isAdmin(gymId) ||
                                (isMember(gymId) && resource.data.userId == request.auth.uid);
        }

        // Logs (einzelne Satz-Logs)
        match /logs/{logId} {
          allow read: if isMember(gymId) && resource.data.userId == request.auth.uid;
          allow create: if isMember(gymId)
                        && request.resource.data.userId == request.auth.uid;
          allow update, delete: if isAdmin(gymId) ||
                                (isMember(gymId) && resource.data.userId == request.auth.uid);
        }

        // Exercises
        match /exercises/{exerciseId} {
          allow read: if isMember(gymId) && (
              resource.data.ownerId == request.auth.uid ||
              resource.data.visibility == 'public'
          );
          allow create: if isMember(gymId)
                        && request.resource.data.ownerId == request.auth.uid;
          allow update, delete: if isAdmin(gymId) ||
                                (isMember(gymId) && resource.data.ownerId == request.auth.uid);
        }
      }
    }
  }
}
