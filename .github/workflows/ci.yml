name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter analyze

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter test --coverage

  rules_test:
    name: Test Firestore Rules
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install test dependencies
        run: npm ci

      - name: Start Firestore emulator
        run: |
          npx firebase-tools emulators:start --only firestore --project tap-em &
          sleep 5

      - name: Run security‚Äêrules tests
        run: npx mocha firestore-tests/security_rules.test.js

  build_matrix:
    name: Build APKs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: [dev, prod]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter build apk --flavor ${{ matrix.flavor }} --release

  deploy:
    name: Upload APK artifacts
    needs: build_matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v3
        with:
          name: apks
          path: build/app/outputs/flutter-apk/*.apk
