name: CI

on:
  push:
    branches-ignore:
      - main
      - production
  pull_request:
    branches-ignore:
      - main
      - production

env:
  FLUTTER_CHANNEL: stable

jobs:
  lint:
    name: Lint & Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Flutter setup
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      # Cache Pub & Dart tool files
      - name: Cache Pub & Dart
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Check Formatting
        run: dart format --set-exit-if-changed .

      - name: Analyze Code
        run: flutter analyze

  test:
    name: Unit & Widget Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Tests with Coverage
        run: flutter test --coverage

  rules_test:
    name: Firestore Security Rules Tests
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install JS Dependencies
        run: npm ci

      - name: Start Firestore Emulator
        run: |
          npx firebase-tools emulators:start --only firestore --project tap-em &
          sleep 5

      - name: Run Security Rules Tests
        run: npx mocha firestore-tests/security_rules.test.js

  build:
    name: Build APKs (Matrix)
    needs: rules_test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: [dev, prod]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --flavor ${{ matrix.flavor }} --release

  coverage_report:
    name: Upload Coverage Report
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

  upload_apks:
    name: Upload APK Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v3
        with:
          name: apks
          path: build/app/outputs/flutter-apk/*.apk

  deploy_placeholder:
    name: Deploy Placeholder
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Stub Deployment
        run: echo "Deployment step stub â€“ Secrets konfigurieren wir in Sprint 1"